{"version":3,"file":"static/js/670.d82ce7be.chunk.js","mappings":"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","sources":["modules/createQuizPage/components/QuestionCard/QuestionCard.styled.js","modules/createQuizPage/components/AnswerCard/AnswerCard.styled.js","modules/createQuizPage/components/AnswerCard/AnswerCard.jsx","modules/createQuizPage/components/QuestionCard/QuestionCard.jsx","modules/createQuizPage/components/QuestionsList/QuestionsList.styled.js","modules/createQuizPage/components/CreateQuizModal/CreateQuizModal.styled.js","modules/createQuizPage/components/CreateQuizModal/CreateQuizModal.jsx","modules/createQuizPage/components/QuestionsList/QuestionsList.jsx","modules/createQuizPage/components/SelectAttributeCard/SelectAttributeCard.styled.js","modules/createQuizPage/components/SelectAttributeCard/SelectAttributeCard.jsx","pages/CreateQuizPage/CreateQuizPage.styled.js","pages/CreateQuizPage/CreateQuizPage.jsx","helpers/makeFieldsAnswers.js","shared/components/Buttons/BtnConfirmAuth/BtnConfirmAuthS.js","shared/components/Modal/Modal.styled.js","shared/components/Modal/Modal.jsx","shared/components/PageTitle/PageTitle.styled.js","shared/components/PageTitle/PageTitle.jsx","shared/components/PageTopBar/PageTopBarStyled.js","shared/components/Buttons/BtnCreateQuiz/BtnCreateQuizStyled.js","shared/components/Buttons/BtnCreateQuiz/BtnCreateQuiz.jsx","shared/components/PageTopBar/PageTopBar.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { FiChevronDown } from \"react-icons/fi\";\nimport { PiPlus } from \"react-icons/pi\";\nimport { BtnConfirmAuthS } from \"../../../../shared/components/Buttons/BtnConfirmAuth/BtnConfirmAuthS\";\n\nexport const StyledQuestionWrapper = styled.div`\n  display: flex;\n  width: clamp(280px, 335px, 100%);\n  flex-direction: column;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 768px) {\n    width: 440px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 744px;\n  }\n`;\n\nexport const StyledQuestionCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: clamp(280px, 335px, 100%);\n  height: 562px;\n  margin-top: 20px;\n  padding: 40px 20px;\n  background-color: ${(props) => props.$bgcolor};\n  border-radius: 20px;\n\n  @media only screen and (min-width: 768px) {\n    width: 440px;\n    padding: 32px 20px;\n    margin-top: 24px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    flex-direction: row;\n    align-items: start;\n    width: 744px;\n    height: 521px;\n    padding: 64px 68px 64px 64px;\n  }\n`;\n\nexport const StyledImageNumberBlock = styled.div`\n  display: none;\n  @media only screen and (min-width: 1440px) {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n\n    & p {\n      color: var(--text-color-100);\n      font-family: \"GilroyBold\";\n    }\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n\n  border-radius: 50%;\n  border: 1px solid var(--blue-background);\n  background-color: var(--blue-background);\n\n  @media only screen and (min-width: 768px) {\n    width: 120px;\n    height: 120px;\n  }\n`;\n\nexport const StyledPlus = styled(PiPlus)`\n  width: 41px;\n  height: 41px;\n`;\n\nexport const StyledInputTheme = styled.input`\n  display: flex;\n  padding: 14px 18px;\n  width: clamp(270px, 335px, 100%);\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border-radius: 30px;\n  border: 1px solid var(--border-color-60);\n  background-color: transparent;\n  color: var(--text-color-100);\n\n  &::placeholder {\n    color: var(--text-color-100);\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 280px;\n  }\n`;\n\nexport const StyledTimeWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin: 32px 0;\n  gap: 14px;\n  & p {\n    color: var(--text-color-60);\n  }\n\n  @media only screen and (min-width: 1440px) {\n    justify-content: start;\n    margin-top: 0;\n  }\n`;\n\nexport const DropdownContainer = styled.div`\n  display: inline-block;\n  position: relative;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  min-width: 91px;\n  height: 36px;\n  padding: 8px 18px;\n  column-gap: 8px;\n  cursor: pointer;\n  background: none;\n  border-radius: 30px;\n  border: 1px solid var(--border-color-60);\n\n  & p {\n    color: var(--text-color-100);\n    font-size: 14px;\n    font-family: \"GilroyBold\";\n    line-height: 18px; /* 128.571% */\n  }\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 2;\n  left: 0;\n  display: ${({ open }) => (open ? \"flex\" : \"none\")};\n  flex-direction: column;\n  gap: 12px;\n  width: 91px;\n  padding: 8px 32px 8px 18px;\n  border-radius: 20px;\n  background: var(--blue-background);\n`;\n\nexport const DropdownItem = styled.li`\n  color: var(--text-color-100);\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const Down = styled(FiChevronDown)`\n  width: 16px;\n  height: 16px;\n  stroke: var(--text-color-100);\n`;\n\nexport const StyledQuestion = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: clamp(280px, 295px, 100%);\n\n  font-size: 14px;\n  letter-spacing: -0.14px;\n\n  @media only screen and (min-width: 768px) {\n    width: 376px;\n    font-size: 16px;\n    letter-spacing: -0.16px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    margin-left: 32px;\n    width: 460px;\n    height: 100%;\n  }\n`;\n\nexport const StyledInputQuestion = styled.input`\n  display: inline-flex;\n  padding: 14px 18px;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border-radius: 30px;\n  border: 1px solid var(--border-color-60);\n  background-color: transparent;\n  color: var(--text-color-100);\n  &::placeholder {\n    color: var(--text-color-100);\n  }\n`;\n\nexport const AnswerCardContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin: 16px 0;\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  align-items: flex-end;\n  margin-top: auto;\n  gap: 14px;\n\n  @media only screen and (min-width: 768px) {\n  }\n\n  @media only screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    margin-top: auto;\n    gap: 14px;\n  }\n`;\n\nexport const StyledBtnSave = styled(BtnConfirmAuthS)`\n  margin: 0;\n  width: min-content;\n  padding: 16px 32px;\n  color: ${(props) => props.$colortext};\n  background-color: ${(props) => props.$bgColor};\n`;\n\nexport const StyledBtnCancel = styled(StyledBtnSave)`\n  background-color: transparent;\n  border: 1px solid var(--border-color-60);\n`;\n\nexport const StyledQuestionNumber = styled.p`\n  display: flex;\n  margin-right: auto;\n  font-size: 14px;\n  font-family: \"GilroyBold\";\n  line-height: 18px; /* 128.571% */\n`;\n","import styled from \"styled-components\";\n\nexport const StyledAnswerWrapper = styled.li`\n  display: flex;\n  width: 100%;\n  height: ${(props) => (props.$quiz === \"quiz\" ? \"68px\" : \"44px\")};\n  padding: 14px 18px;\n  font-size: 14px;\n  letter-spacing: -0.14px;\n  border-radius: ${(props) => (props.$quiz === \"quiz\" ? \"15px\" : \"30px\")};\n  border: 1px solid var(--border-color-60);\n\n  @media only screen and (min-width: 375px) {\n    width: 139px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 180px;\n    font-size: 16px;\n    letter-spacing: -0.16px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    align-items: start;\n    width: 222px;\n  }\n`;\n\nexport const StyledLabelAnswer = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: start;\n  align-items: baseline;\n  width: 100%;\n\n  & .letter {\n    font-family: \"GilroyBold\";\n  }\n  & span {\n    position: absolute;\n    display: block;\n    right: 0;\n    top: 0px;\n    height: 14px;\n    width: 14px;\n    border-radius: 4px;\n    border: 1px solid var(--border-color-60);\n    cursor: pointer;\n  }\n\n  & span:after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    left: 50%;\n    top: 50%;\n    height: 12px;\n    width: 12px;\n    background: ${(props) => props.$colorCheckbox || \"#205bf1\"};\n    border-radius: 3px;\n    transform: scale(0);\n  }\n\n  & input[type=\"radio\"]:checked ~ span:after {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n\nexport const StyledAnswerBoolean = styled.p`\n  display: flex;\n  width: 80%;\n  padding: 0 2px;\n  margin-left: 2px;\n`;\n\nexport const StyledTextareaAnswer = styled.textarea`\n  display: flex;\n  padding: 0 2px;\n  margin-left: 2px;\n  width: 85%;\n  justify-content: center;\n  align-items: center;\n  resize: none;\n  border: none;\n  background-color: transparent;\n  color: var(--text-color-100);\n  &::placeholder {\n    color: var(--text-color-100);\n  }\n\n  @media only screen and (min-width: 375px) {\n    width: 65%;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 75%;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 80%;\n  }\n`;\n\nexport const StyledInputRadio = styled.input`\n  margin-left: auto;\n  /* display: none; */\n  position: absolute;\n  z-index: 1;\n  right: 0;\n  top: 1px;\n  opacity: 0;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport {\n  StyledAnswerBoolean,\n  StyledAnswerWrapper,\n  StyledInputRadio,\n  StyledLabelAnswer,\n  StyledTextareaAnswer,\n} from \"./AnswerCard.styled\";\n\nconst AnswerCard = ({\n  letter,\n  handleRadioChange,\n  checked,\n  type,\n  questionChanges,\n  selectAnswers,\n  handleQuizChange,\n  currentQuestion,\n  idxAnswer,\n}) => {\n  const currentAnswer = currentQuestion?.answers\n    ? currentQuestion?.answers[idxAnswer]\n    : \"\";\n  const bgColorCard = questionChanges?.background\n    ? questionChanges.background\n    : currentQuestion?.background || \"rgba(255, 255, 255, 0.02)\";\n\n  const definedValueInput = () => {\n    if (type === \"quiz\")\n      for (let key in questionChanges) {\n        if (key.includes(`[${idxAnswer}][answer]`)) return questionChanges[key];\n      }\n  };\n\n  return (\n    <StyledAnswerWrapper\n      $quiz={(type || currentQuestion?.type) === \"quiz\" ? \"quiz\" : null}\n    >\n      <StyledLabelAnswer\n        htmlFor={letter}\n        $colorCheckbox={\n          bgColorCard !== \"rgba(255, 255, 255, 0.02)\" && \"#F4F4F4\"\n        }\n      >\n        <p className=\"letter\">{letter}:</p>\n        {(type || currentQuestion?.type) === \"quiz\" ? (\n          <StyledTextareaAnswer\n            type=\"text\"\n            id={letter}\n            name=\"answer\"\n            placeholder=\"Enter answer\"\n            value={definedValueInput() || currentAnswer?.answer || \"\"}\n            onChange={handleQuizChange}\n          />\n        ) : (\n          <StyledAnswerBoolean>\n            {letter === \"A\" ? \"True\" : \"False\"}\n          </StyledAnswerBoolean>\n        )}\n        <StyledInputRadio\n          type=\"radio\"\n          name=\"answer\"\n          id={letter}\n          checked={\n            checked !== \"\"\n              ? checked === letter\n              : currentAnswer?.correctAnswer || false\n          }\n          onChange={handleRadioChange}\n        />\n        <span></span>\n      </StyledLabelAnswer>\n    </StyledAnswerWrapper>\n  );\n};\n\nexport default AnswerCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  AnswerCardContainer,\n  BtnContainer,\n  Down,\n  DropdownButton,\n  DropdownContainer,\n  DropdownItem,\n  DropdownList,\n  ImageWrapper,\n  StyledBtnCancel,\n  StyledBtnSave,\n  StyledImageNumberBlock,\n  StyledInputQuestion,\n  StyledInputTheme,\n  StyledPlus,\n  StyledQuestion,\n  StyledQuestionCard,\n  StyledQuestionNumber,\n  StyledQuestionWrapper,\n  StyledTimeWrapper,\n} from \"./QuestionCard.styled\";\nimport AnswerCard from \"../AnswerCard/AnswerCard\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCurrentQuiz } from \"../../../../redux/selectors\";\n\nconst QuestionCard = ({\n  questionChanges,\n  setQuestionChanges,\n  handleQuizChange,\n  handleRadioChange,\n  quizChanges,\n  selectAnswers,\n  handleSubmit,\n  isChecked,\n  idxActiveQuestion,\n}) => {\n  const [isDropdownTimeOpen, setDropdownTimeOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const currentQuiz = useSelector(selectCurrentQuiz);\n  const dispatch = useDispatch();\n  const isDesktop = useMediaQuery({ query: \"(min-width: 1440px)\" });\n\n  const currentQuestion = currentQuiz?.questions\n    ? currentQuiz?.questions[idxActiveQuestion]\n    : quizChanges;\n  const questionNumber = currentQuiz?.questions\n    ? Number(idxActiveQuestion) + 1\n    : idxActiveQuestion;\n\n  const allQuestions = currentQuiz ? currentQuiz.questions.length : 0;\n  const bgColorCard = questionChanges?.background\n    ? questionChanges.background\n    : currentQuestion?.background || \"rgba(255, 255, 255, 0.02)\";\n\n  const toggleDropdown = () => {\n    setDropdownTimeOpen(!isDropdownTimeOpen);\n  };\n\n  const formatTime = (timeSeconds) => {\n    if (!timeSeconds) return;\n    const minutes = Math.floor(timeSeconds / 60);\n    const seconds = timeSeconds % 60;\n    return `${String(minutes).padStart(1, \"0\")}:${String(seconds).padStart(\n      2,\n      \"0\"\n    )}`;\n  };\n\n  const formattedTime =\n    formatTime(questionChanges?.time) || formatTime(currentQuestion?.time);\n  const timeInSeconds = [30, 45, 60, 75, 90, 105, 120];\n\n  useEffect(() => {\n    const handleDocumentTimeClick = (event) => {\n      if (\n        isDropdownTimeOpen &&\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target)\n      ) {\n        setDropdownTimeOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", handleDocumentTimeClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentTimeClick);\n    };\n  }, [dispatch, isDropdownTimeOpen]);\n\n  const handleClickTime = (evt) => {\n    const currentTimeId = evt.target.id;\n\n    setQuestionChanges((prevState) => ({\n      ...prevState,\n      time: currentTimeId,\n    }));\n  };\n\n  return (\n    <StyledQuestionWrapper>\n      <StyledInputTheme\n        type=\"text\"\n        placeholder=\"Quiz theme\"\n        name=\"quiz\"\n        value={quizChanges?.quizName || currentQuiz?.quizName || \"\"}\n        onChange={handleQuizChange}\n      />\n      <StyledQuestionCard $bgcolor={bgColorCard}>\n        {isDesktop ? (\n          <StyledImageNumberBlock>\n            <ImageWrapper>\n              <StyledPlus />\n            </ImageWrapper>\n            <p>\n              {questionNumber}/{allQuestions}\n            </p>\n          </StyledImageNumberBlock>\n        ) : (\n          <ImageWrapper>\n            <StyledPlus />\n          </ImageWrapper>\n        )}\n        <StyledQuestion>\n          <StyledTimeWrapper>\n            <p>Time:</p>\n            <DropdownContainer ref={dropdownRef}>\n              <DropdownButton onClick={toggleDropdown}>\n                <p>{formattedTime || \"\"}</p>\n                {isDropdownTimeOpen ? (\n                  <Down style={{ rotate: \"180deg\" }} />\n                ) : (\n                  <Down />\n                )}\n              </DropdownButton>\n              <DropdownList open={isDropdownTimeOpen}>\n                {timeInSeconds.map((el) => (\n                  <DropdownItem\n                    key={formatTime(el)}\n                    id={el}\n                    onClick={handleClickTime}\n                  >\n                    {formatTime(el)}\n                  </DropdownItem>\n                ))}\n              </DropdownList>\n            </DropdownContainer>\n          </StyledTimeWrapper>\n          <StyledInputQuestion\n            type=\"text\"\n            name=\"question\"\n            placeholder=\"Enter a question\"\n            value={questionChanges.question || currentQuestion?.question || \"\"}\n            onChange={handleQuizChange}\n          />\n          <AnswerCardContainer>\n            {selectAnswers?.map((el, idx) => (\n              <AnswerCard\n                key={el}\n                letter={el}\n                checked={isChecked}\n                handleRadioChange={handleRadioChange}\n                type={questionChanges.type}\n                handleQuizChange={handleQuizChange}\n                questionChanges={questionChanges}\n                selectAnswers={selectAnswers}\n                currentQuestion={currentQuestion}\n                idxAnswer={idx}\n              />\n            ))}\n          </AnswerCardContainer>\n          {isDesktop ? (\n            <BtnContainer>\n              <StyledBtnSave\n                $colortext={\n                  bgColorCard !== \"rgba(255, 255, 255, 0.02)\" && \"#171717\"\n                }\n                $bgColor={\n                  bgColorCard !== \"rgba(255, 255, 255, 0.02)\" && \"#F4F4F4\"\n                }\n                onClick={handleSubmit}\n                data-id={currentQuiz?._id}\n              >\n                Save\n              </StyledBtnSave>\n              <StyledBtnCancel>Cancel</StyledBtnCancel>\n            </BtnContainer>\n          ) : null}\n        </StyledQuestion>\n        {isDesktop ? null : (\n          <BtnContainer>\n            <StyledQuestionNumber>\n              {questionNumber}/{allQuestions}\n            </StyledQuestionNumber>\n            <StyledBtnSave\n              $colortext={\n                bgColorCard !== \"rgba(255, 255, 255, 0.02)\" && \"#171717\"\n              }\n              $bgColor={\n                bgColorCard !== \"rgba(255, 255, 255, 0.02)\" && \"#F4F4F4\"\n              }\n              onClick={handleSubmit}\n              data-id={currentQuiz?._id}\n            >\n              Save\n            </StyledBtnSave>\n            <StyledBtnCancel>Cancel</StyledBtnCancel>\n          </BtnContainer>\n        )}\n      </StyledQuestionCard>\n    </StyledQuestionWrapper>\n  );\n};\n\nexport default QuestionCard;\n","import styled from \"styled-components\";\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\n\nexport const QuestionsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 20px;\n  background-color: var(--white-background);\n  width: 335px;\n  min-height: 320px;\n  padding: 40px 20px;\n  & p {\n    padding-bottom: 32px;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 32px; /* 133.333% */\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 240px;\n    height: 630px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 343px;\n    height: 589px;\n    padding: 32px;\n  }\n`;\nexport const QuestionItem = styled.li`\n  font-size: 16px;\n  /* width: 204px; */\n  justify-content: space-between;\n  padding-bottom: 12px;\n  display: flex;\n  align-items: center;\n  margin: 8px 0;\n  list-style-type: none;\n  cursor: pointer;\n  &:not(:last-child) {\n    border-bottom: 1px solid #ccc; /* підкреслення для всіх елементів, окрім останнього. */\n  }\n`;\nexport const SelectStyledQuiz = styled.button`\n  margin-bottom: 8px;\n  margin-top: 32px;\n  width: 100%;\n  max-width: 335px;\n  height: 48px;\n  padding: 15px 18px;\n  border-radius: 30px;\n  border: 1px solid var(--border-color-30);\n  background-color: transparent;\n  color: #f4f4f4;\n  color: var(--text-color-100);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.29; /* 128.571% */\n  letter-spacing: -0.14px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Down = styled(FiChevronDown)`\n  width: 28px;\n  height: 28px;\n  stroke: var(--text-color-100);\n`;\nexport const Up = styled(FiChevronUp)`\n  width: 28px;\n  height: 28px;\n  stroke: var(--text-color-100);\n`;\nexport const DropdownList = styled.div`\n  left: 0;\n  display: block;\n  padding: 18px;\n  border-radius: 15px;\n  background: var(--blue-background);\n  li:first-child {\n    margin-bottom: 4px;\n  }\n  li > button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: transparent;\n    color: inherit;\n    width: 100%;\n    text-align: left;\n    height: 24px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledCreateQuizModal = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  max-width: 474px;\n  background-color: var(--second-background);\n  border-radius: 20px;\n  border: 1px solid rgba(244, 244, 244, 0.3);\n  color: white;\n  padding: 100px 80px;\n\n  .conrirm {\n    margin: 25px 25px 0 0;\n  }\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { StyledCreateQuizModal } from \"./CreateQuizModal.styled\";\nimport { toggleShowCreatePageModal } from \"../../../../redux/Modal/modalSlice\";\nimport { deleteQuestionThunk } from \"../../../../redux/quiz/questionThunks\";\nimport { selectCurrentQuiz } from \"../../../../redux/selectors\";\nimport { setDeleteQuestion } from \"../../../../redux/quiz/quizSlice\";\n\nconst CreateQuizModal = ({\n  idx,\n  setIdxToDelete,\n  idxToMove,\n  setIdxToMove,\n  idxActiveQuestion,\n  setIdxActiveQuestion,\n  setQuestionChanges,\n  isQuestionHaveChange,\n  setChecked,\n}) => {\n  const currentQuiz = useSelector(selectCurrentQuiz);\n  const dispatch = useDispatch();\n  const idToDelete = currentQuiz?.questions[idx]?._id;\n  const isDeleteActiveQuestion = idx === Number(idxActiveQuestion);\n\n  const handleConfirmDelete = (idx) => {\n    if (isDeleteActiveQuestion && idToDelete) {\n      dispatch(deleteQuestionThunk(idToDelete));\n      setIdxActiveQuestion(0);\n      setQuestionChanges({});\n    }\n    if (!isDeleteActiveQuestion && idToDelete) {\n      dispatch(deleteQuestionThunk(idToDelete));\n      setIdxActiveQuestion((prevState) =>\n        idx < idxActiveQuestion ? prevState - 1 : prevState\n      );\n    }\n\n    setQuestionChanges({});\n    dispatch(setDeleteQuestion(idx));\n    setIdxActiveQuestion(0);\n    dispatch(toggleShowCreatePageModal());\n    setIdxToDelete(null);\n  };\n\n  const handleConfirmMove = (idxToMove) => {\n    setChecked(\"\");\n    setQuestionChanges({});\n    setIdxActiveQuestion(idxToMove);\n    setIdxToMove(null);\n    dispatch(toggleShowCreatePageModal());\n  };\n\n  const handleCancelClick = () => {\n    dispatch(toggleShowCreatePageModal());\n    setIdxToDelete(null);\n    setIdxToMove(null);\n  };\n\n  return (\n    <StyledCreateQuizModal>\n      {isQuestionHaveChange && idx === null ? (\n        <p>{`You have unsaved changes to question # ${\n          idxActiveQuestion + 1\n        }. If you choose another question, this changes will be lost. Move to question # ${\n          idxToMove + 1\n        }?`}</p>\n      ) : (\n        <p>{`Do you want to delete the question # ${idx + 1} ?`}</p>\n      )}\n      <button\n        className=\"conrirm\"\n        onClick={\n          idx !== null\n            ? () => handleConfirmDelete(idx)\n            : () => handleConfirmMove(idxToMove)\n        }\n      >\n        OK\n      </button>\n      <button onClick={handleCancelClick}>Cancel</button>\n    </StyledCreateQuizModal>\n  );\n};\n\nexport default CreateQuizModal;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FiTrash2 } from \"react-icons/fi\";\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\nimport { HiArrowLongRight } from \"react-icons/hi2\";\nimport {\n  QuestionsWrapper,\n  SelectStyledQuiz,\n  DropdownList,\n  QuestionItem,\n} from \"./QuestionsList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCurrentQuiz } from \"../../../../redux/selectors\";\nimport { setCurrentChange } from \"../../../../redux/quiz/quizSlice\";\nimport { toggleShowCreatePageModal } from \"../../../../redux/Modal/modalSlice\";\nimport { selectIsShowCreatePageModal } from \"../../../../redux/Modal/modalSelectors\";\nimport Modal from \"../../../../shared/components/Modal/Modal\";\nimport CreateQuizModal from \"../CreateQuizModal/CreateQuizModal\";\n\nfunction QuestionsList({\n  setQuestionChanges,\n  questionChanges,\n  isChecked,\n  setChecked,\n  setIdxActiveQuestion,\n  idxActiveQuestion,\n}) {\n  const currentQuiz = useSelector(selectCurrentQuiz);\n  const isShowCreatePageModal = useSelector(selectIsShowCreatePageModal);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [idxToDelete, setIdxToDelete] = useState(null);\n  const [idxToMove, setIdxToMove] = useState(null);\n  const dispatch = useDispatch();\n  const createBtnRef = useRef();\n\n  // const location = useLocation();\n\n  // const idQuizToEdit = location.state;\n  const dataQuestions = currentQuiz?.questions ? currentQuiz.questions : [];\n  const isQuestionHaveChange =\n    Object.keys(questionChanges).length > 0 || isChecked !== \"\";\n\n  useEffect(() => {\n    const handleDocumentClick = (event) => {\n      const closeDropdown =\n        isDropdownOpen &&\n        !createBtnRef.current.contains(event.target) &&\n        !(event.target.id === \"icon-create\");\n\n      if (closeDropdown) setIsDropdownOpen(false);\n    };\n    document.addEventListener(\"click\", handleDocumentClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentClick);\n    };\n  }, [isDropdownOpen]);\n\n  const handleAdd = (value) => {\n    setIsDropdownOpen(!isDropdownOpen);\n    setQuestionChanges((prevState) => {\n      const modifiedChanges = { ...prevState };\n      Object.keys(modifiedChanges).forEach((key) => {\n        if (key.includes(\"answers\")) {\n          delete modifiedChanges[key];\n        }\n      });\n      return { ...modifiedChanges, type: value };\n    });\n    setChecked(\"\");\n    dispatch(setCurrentChange({ type: value }));\n\n    const isHaveUnsavedQuestion = currentQuiz?.questions.some(\n      (question) => !question._id\n    );\n    isHaveUnsavedQuestion && currentQuiz\n      ? setIdxActiveQuestion(currentQuiz?.questions.length - 1)\n      : setIdxActiveQuestion(currentQuiz?.questions.length);\n  };\n\n  const handleDeleteOption = (event, index) => {\n    event.stopPropagation();\n    setIdxToDelete(index);\n    dispatch(toggleShowCreatePageModal());\n  };\n\n  const handlerSelectedQuestion = (event) => {\n    const idxSelectedQuestion = Number(event.target.dataset.id);\n    if (\n      !event.target.classList.contains(\"delete-icon\") &&\n      idxSelectedQuestion === idxActiveQuestion\n    )\n      return;\n    else if (\n      !event.target.classList.contains(\"delete-icon\") &&\n      !isQuestionHaveChange\n    )\n      setIdxActiveQuestion(idxSelectedQuestion);\n    else {\n      setIdxToMove(idxSelectedQuestion);\n      dispatch(toggleShowCreatePageModal());\n    }\n  };\n\n  return (\n    <>\n      <QuestionsWrapper>\n        <p>Questions</p>\n        <ul\n          style={{\n            maxHeight: isDropdownOpen ? \"200px\" : \"auto\",\n            overflowY: \"auto\",\n          }}\n        >\n          {dataQuestions?.map((question, index) => (\n            <QuestionItem\n              key={uuidv4()}\n              onClick={handlerSelectedQuestion}\n              data-id={index}\n            >\n              {index + 1}.{\" \"}\n              {question?.type.charAt(0).toUpperCase() + question?.type.slice(1)}\n              <span\n                role=\"button\"\n                onClick={(event) => handleDeleteOption(event, index)}\n                style={{ cursor: \"pointer\" }}\n                className=\"delete-icon\"\n              >\n                <FiTrash2 style={{ cursor: \"pointer\" }} />\n              </span>\n            </QuestionItem>\n          ))}\n        </ul>\n        <SelectStyledQuiz\n          onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n          ref={createBtnRef}\n        >\n          Create\n          {isDropdownOpen ? (\n            <FiChevronUp size={16} id=\"icon-create\" />\n          ) : (\n            <FiChevronDown size={16} id=\"icon-create\" />\n          )}\n        </SelectStyledQuiz>\n        {isDropdownOpen && (\n          <DropdownList>\n            <ul>\n              <li>\n                <button onClick={() => handleAdd(\"quiz\")}>\n                  Quiz <HiArrowLongRight size={24} />\n                </button>\n              </li>\n              <li>\n                <button onClick={() => handleAdd(\"true or false\")}>\n                  True or false <HiArrowLongRight size={24} />\n                </button>\n              </li>\n            </ul>\n          </DropdownList>\n        )}\n      </QuestionsWrapper>\n      {isShowCreatePageModal && (\n        <Modal\n          modalClose={() => {\n            dispatch(toggleShowCreatePageModal());\n            setIdxToMove(null);\n            setIdxToDelete(null);\n          }}\n        >\n          <CreateQuizModal\n            idx={idxToDelete}\n            setIdxToDelete={setIdxToDelete}\n            idxToMove={idxToMove}\n            setIdxToMove={setIdxToMove}\n            idxActiveQuestion={idxActiveQuestion}\n            setIdxActiveQuestion={setIdxActiveQuestion}\n            setQuestionChanges={setQuestionChanges}\n            isQuestionHaveChange={isQuestionHaveChange}\n            setChecked={setChecked}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default QuestionsList;\n","import styled from \"styled-components\";\n\nexport const AttributeTitles = styled.p`\n  color: #f4f4f4;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.25;\n  letter-spacing: -0.16px;\n`;\n\n//=========================================\n\nexport const SetAttributeDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 40px;\n  width: 260px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n\n  @media only screen and (min-width: 768px) {\n    width: 474px;\n    column-gap: 64px;\n    flex-wrap: nowrap;\n    margin-top: 32px;\n    margin-bottom: 32px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 110px;\n    flex-direction: column;\n    row-gap: 64px;\n    margin: 0;\n  }\n`;\n\nexport const SelectAudienceDiv = styled.div`\n  width: 100%;\n  max-width: 110px;\n\n  @media only screen and (min-width: 1440px) {\n    padding-top: 16px;\n  }\n`;\n\nexport const InputsWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 12px;\n  width: 100%;\n\n  @media only screen and (min-width: 375px) {\n    max-width: 110px;\n  }\n  @media only screen and (min-width: 768px) {\n    max-width: 110px;\n  }\n`;\n\nexport const ChooseAudienceLabel = styled.label`\n  cursor: pointer;\n  font-size: 14px;\n  letter-spacing: -0.16px;\n  position: relative;\n  padding-left: 21px;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  & input {\n    display: none;\n  }\n\n  & span {\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    border: 1px solid #205bf1;\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n\n  & span:after {\n    content: \"\";\n    height: 7px;\n    width: 7px;\n    background: #205bf1;\n    display: block;\n    position: absolute;\n    border-radius: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    left: 50%;\n    top: 50%;\n  }\n\n  & input[type=\"radio\"]:checked ~ span:after {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n\n//=========================================\n\nexport const AttributeCategorySelect = styled.select`\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n\n  width: 100%;\n  max-width: 110px;\n  margin-top: 16px;\n  padding: 0;\n  background-color: transparent;\n  color: var(--text-color-100);\n  cursor: pointer;\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.29;\n  letter-spacing: -0.14px;\n  border: none;\n\n  & option {\n    background: var(--blue-background);\n    color: var(--text-color-100);\n  }\n`;\n\n//=========================================\n\nexport const SelectColorDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  column-gap: 8px;\n  margin-top: 16px;\n\n  @media only screen and (min-width: 1440px) {\n    flex-direction: column;\n    align-items: start;\n    row-gap: 8px;\n  }\n`;\n\nexport const ColorLabel = styled.label`\n  & input {\n    display: none;\n  }\n  & span {\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    cursor: pointer;\n    &.blue {\n      background-color: #43a8d3;\n    }\n    &.viola {\n      background-color: #6636c5;\n    }\n    &.orange {\n      background-color: #e65368;\n    }\n  }\n  & input[type=\"radio\"]:checked + span {\n    border: 1px solid #f4f4f4;\n  }\n`;\n\n//=========================================\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  AttributeCategorySelect,\n  AttributeTitles,\n  ChooseAudienceLabel,\n  ColorLabel,\n  InputsWrapper,\n  SelectAudienceDiv,\n  SelectColorDiv,\n  SetAttributeDiv,\n} from \"./SelectAttributeCard.styled\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuiz } from \"../../../../redux/selectors\";\n\nconst SelectAttributeCard = (props) => {\n  const {\n    quizChanges,\n    questionChanges,\n    changeAttribute,\n    changeCategory,\n    categories,\n    idxActiveQuestion,\n  } = props;\n  const currentQuiz = useSelector(selectCurrentQuiz);\n\n  const currentQuestion = currentQuiz?.questions\n    ? currentQuiz?.questions[idxActiveQuestion]\n    : quizChanges;\n\n  const getOptions = (quizChanges, currentQuiz) => {\n    if (!quizChanges.quizType && currentQuiz?.quizType)\n      return currentQuiz?.quizType === \"children\"\n        ? categories?.children\n        : categories?.adults;\n    if (quizChanges.quizType)\n      return quizChanges?.quizType === \"children\"\n        ? categories?.children\n        : categories?.adults;\n    else return categories?.adults;\n  };\n\n  const arrOptions = getOptions(quizChanges, currentQuiz);\n\n  return (\n    <SetAttributeDiv>\n      <SelectAudienceDiv>\n        <AttributeTitles>Audience</AttributeTitles>\n        <InputsWrapper>\n          <ChooseAudienceLabel htmlFor=\"children\">\n            <input\n              type=\"radio\"\n              id=\"children\"\n              name=\"children\"\n              checked={\n                quizChanges.quizType\n                  ? quizChanges.quizType === \"children\"\n                  : currentQuiz?.quizType === \"children\"\n              }\n              onChange={changeAttribute}\n            />\n            For Children\n            <span></span>\n          </ChooseAudienceLabel>\n          <ChooseAudienceLabel htmlFor=\"adults\">\n            <input\n              type=\"radio\"\n              id=\"adults\"\n              name=\"adults\"\n              checked={\n                quizChanges.quizType\n                  ? quizChanges.quizType === \"adults\"\n                  : currentQuiz?.quizType === \"adults\" ||\n                    !currentQuiz?.quizType === true\n              }\n              onChange={changeAttribute}\n            />\n            For Adults\n            <span></span>\n          </ChooseAudienceLabel>\n        </InputsWrapper>\n      </SelectAudienceDiv>\n      <div>\n        <AttributeTitles>Categories</AttributeTitles>\n        <AttributeCategorySelect\n          name=\"categories\"\n          id=\"categories\"\n          value={quizChanges.quizCategory || currentQuiz?.categoryName}\n          onChange={changeCategory}\n        >\n          <option value=\"defaultOption\" hidden>\n            {quizChanges.quizType\n              ? `For ${quizChanges?.quizType}`\n              : currentQuiz?.categoryName || `For adults`}\n          </option>\n          {arrOptions?.map((item) => (\n            <option key={uuidv4()} value={item._id}>\n              {item.categoryName}\n            </option>\n          ))}\n        </AttributeCategorySelect>\n      </div>\n      <div>\n        <AttributeTitles>Background</AttributeTitles>\n        <SelectColorDiv>\n          <ColorLabel>\n            <input\n              type=\"radio\"\n              id=\"#43A8D3\"\n              name=\"background\"\n              checked={\n                (questionChanges.background || currentQuestion?.background) ===\n                \"#43A8D3\"\n              }\n              onChange={changeAttribute}\n            />\n            <span className=\"blue\"></span>\n          </ColorLabel>\n          <ColorLabel>\n            <input\n              type=\"radio\"\n              id=\"#6636C5\"\n              name=\"background\"\n              checked={\n                (questionChanges.background || currentQuestion?.background) ===\n                \"#6636C5\"\n              }\n              onChange={changeAttribute}\n            />\n            <span className=\"viola\"></span>\n          </ColorLabel>\n          <ColorLabel>\n            <input\n              type=\"radio\"\n              id=\"#E65368\"\n              name=\"background\"\n              checked={\n                (questionChanges.background || currentQuestion?.background) ===\n                \"#E65368\"\n              }\n              onChange={changeAttribute}\n            />\n            <span className=\"orange\"></span>\n          </ColorLabel>\n        </SelectColorDiv>\n      </div>\n    </SetAttributeDiv>\n  );\n};\n\nexport default SelectAttributeCard;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  padding: 80px 0 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  & h2 {\n    margin: 0;\n  }\n\n  @media only screen and (min-width: 768px) {\n  }\n`;\n\nexport const SectionWrapper = styled.section`\n  /* width: 100%; */\n  width: clamp(280px, 335px, 100%);\n  display: flex;\n  flex-wrap: wrap;\n  column-gap:24px;\n  flex-direction: row;\n  align-items: center;\n\n  @media only screen and (min-width: 768px) {\n    width: 704px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 1240px;\n    flex-wrap: nowrap;\n  }\n`;\n\n","import { useEffect, useState } from \"react\";\nimport QuestionCard from \"../../modules/createQuizPage/components/QuestionCard/QuestionCard.jsx\";\nimport QuestionsList from \"../../modules/createQuizPage/components/QuestionsList/QuestionsList.jsx\";\nimport SelectAttributeCard from \"../../modules/createQuizPage/components/SelectAttributeCard/SelectAttributeCard.jsx\";\nimport PageTopBar from \"../../shared/components/PageTopBar/PageTopBar.jsx\";\nimport { PageWrapper, SectionWrapper } from \"./CreateQuizPage.styled.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createQuizThunk,\n  getQuizCategoriesThunk,\n  getQuizThunk,\n} from \"../../redux/quiz/quizThunks.js\";\nimport {\n  selectCurrentQuiz,\n  selectDiscoverAllCategories,\n} from \"../../redux/selectors.js\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { addQuestionThunk } from \"../../redux/quiz/questionThunks.js\";\nimport { useLocation } from \"react-router-dom\";\nimport { setCurrentChange } from \"../../redux/quiz/quizSlice.js\";\nimport makeFieldsAnswers from \"../../helpers/makeFieldsAnswers.js\";\n\nexport default function CreateQuizPage() {\n  const [quizChanges, setQuizChanges] = useState({});\n  const [questionChanges, setQuestionChanges] = useState({});\n  const [isChecked, setChecked] = useState(\"\");\n  const [idxActiveQuestion, setIdxActiveQuestion] = useState(0);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const allCategories = useSelector(selectDiscoverAllCategories);\n  const currentQuiz = useSelector(selectCurrentQuiz);\n\n  const isMobile = useMediaQuery({ query: \"(max-width: 767px)\" });\n\n  const idQuizToEdit = location.state;\n  const currentQuestion = currentQuiz?.questions\n    ? currentQuiz?.questions[idxActiveQuestion]\n    : quizChanges;\n\n  const selectAnswers =\n    (questionChanges.type || currentQuestion?.type) === \"quiz\"\n      ? [\"A\", \"C\", \"B\", \"D\"]\n      : [\"A\", \"C\"];\n\n  useEffect(() => {\n    if (idQuizToEdit && !allCategories) {\n      dispatch(getQuizThunk(idQuizToEdit.data));\n      dispatch(getQuizCategoriesThunk());\n    } else if (!idQuizToEdit && !allCategories) {\n      dispatch(getQuizCategoriesThunk());\n    } else if (idQuizToEdit && allCategories) {\n      dispatch(getQuizThunk(idQuizToEdit.data));\n    }\n\n    return () => dispatch(setCurrentChange(null));\n  }, [dispatch, allCategories, idQuizToEdit]);\n\n  const handleRadioChange = (event) => {\n    const value = event.target.id;\n    const name = event.target.name;\n    if (name === \"children\" || name === \"adults\") {\n      return setQuizChanges((prevState) => ({\n        ...prevState,\n        quizType: value,\n        quizCategory: \"\",\n      }));\n    }\n    if (name === \"answer\") {\n      const fields = makeFieldsAnswers(\n        questionChanges.type,\n        value,\n        selectAnswers,\n        currentQuestion\n      );\n\n      setQuestionChanges((prevState) => ({\n        ...prevState,\n        ...fields,\n      }));\n      setChecked(value);\n    }\n    name === \"background\" &&\n      setQuestionChanges((prevState) => ({\n        ...prevState,\n        background: value,\n      }));\n  };\n\n  const handleQuizChange = (event) => {\n    const idInput = event.target.id;\n    const value = event.target.value;\n    const nameInput = event.target.name;\n    if (nameInput === \"answer\") {\n      let answer = {};\n      selectAnswers.forEach(\n        (item, idx) =>\n          idInput === item &&\n          (answer = {\n            [`answers[${idx}][answer]`]: value,\n          })\n      );\n      return setQuestionChanges((prevState) => ({\n        ...prevState,\n        ...answer,\n      }));\n    }\n    nameInput === \"quiz\" &&\n      setQuizChanges((prevState) => ({\n        ...prevState,\n        quizName: value,\n      }));\n    nameInput === \"question\" &&\n      setQuestionChanges((prevState) => ({\n        ...prevState,\n        question: value,\n      }));\n    nameInput === \"categories\" &&\n      setQuizChanges((prevState) => ({\n        ...prevState,\n        quizCategory: value,\n      }));\n  };\n\n  console.group(\"CreatePageLOG\");\n  console.log(\"questionChanges: \", questionChanges);\n  console.log(\"quizChanges: \", quizChanges);\n\n  console.groupEnd();\n\n  const handleSubmit = (event) => {\n    const quizId = event.target.dataset.id;\n\n    if (!quizId)\n      dispatch(\n        createQuizThunk({\n          quizChanges,\n          dispatch,\n          dataQuestion: questionChanges,\n        })\n      );\n    else {\n      dispatch(addQuestionThunk({ question: questionChanges, id: quizId }));\n    }\n    setQuestionChanges({});\n    setIdxActiveQuestion(0); /* ??? veriify this action */\n  };\n\n  return (\n    <PageWrapper>\n      <PageTopBar titlePage=\"Create quize\" />\n      <SectionWrapper>\n        {isMobile ? (\n          <>\n            <QuestionCard\n              questionChanges={questionChanges}\n              setQuestionChanges={setQuestionChanges}\n              handleQuizChange={handleQuizChange}\n              handleRadioChange={handleRadioChange}\n              quizChanges={quizChanges}\n              selectAnswers={selectAnswers}\n              handleSubmit={handleSubmit}\n              isChecked={isChecked}\n              idxActiveQuestion={idxActiveQuestion}\n            />\n            <SelectAttributeCard\n              changeAttribute={handleRadioChange}\n              changeCategory={handleQuizChange}\n              categories={allCategories}\n              quizChanges={quizChanges}\n              questionChanges={questionChanges}\n              idxActiveQuestion={idxActiveQuestion}\n            />\n            <QuestionsList\n              questionChanges={questionChanges}\n              setQuestionChanges={setQuestionChanges}\n              isChecked={isChecked}\n              setChecked={setChecked}\n              setIdxActiveQuestion={setIdxActiveQuestion}\n              idxActiveQuestion={idxActiveQuestion}\n            />\n          </>\n        ) : (\n          <>\n            <QuestionsList\n              questionChanges={questionChanges}\n              setQuestionChanges={setQuestionChanges}\n              isChecked={isChecked}\n              setChecked={setChecked}\n              setIdxActiveQuestion={setIdxActiveQuestion}\n              idxActiveQuestion={idxActiveQuestion}\n            />\n            <QuestionCard\n              questionChanges={questionChanges}\n              setQuestionChanges={setQuestionChanges}\n              handleQuizChange={handleQuizChange}\n              handleRadioChange={handleRadioChange}\n              quizChanges={quizChanges}\n              selectAnswers={selectAnswers}\n              handleSubmit={handleSubmit}\n              isChecked={isChecked}\n              idxActiveQuestion={idxActiveQuestion}\n            />\n            <SelectAttributeCard\n              changeAttribute={handleRadioChange}\n              changeCategory={handleQuizChange}\n              categories={allCategories}\n              quizChanges={quizChanges}\n              questionChanges={questionChanges}\n              idxActiveQuestion={idxActiveQuestion}\n            />\n          </>\n        )}\n      </SectionWrapper>\n    </PageWrapper>\n  );\n}\n","export default function makeFieldsAnswers(\n  type,\n  value,\n  selectAnswers,\n  currentQuestion\n) {\n  let fields = {};\n\n  if ((type || currentQuestion?.type) === \"quiz\") {\n    selectAnswers.forEach((item, idx) => {\n      fields = {\n        ...fields,\n        [`answers[${idx}][correctAnswer]`]: value === item ? true : false,\n      };\n    });\n  } else {\n    selectAnswers.forEach(\n      (item, idx) =>\n        (fields = {\n          ...fields,\n          [`answers[${idx}][answer]`]: idx === 0 ? \"True\" : \"False\",\n          [`answers[${idx}][correctAnswer]`]: value === item ? true : false,\n        })\n    );\n  }\n  return fields;\n}\n","import styled from \"styled-components\";\n\nexport const BtnConfirmAuthS = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 314px;\n  width: 100%;\n  height: 48px;\n  border-radius: 30px;\n  font-family: \"GilroyBold\";\n  color: var(--text-color-100);\n  background-color: var(--blue-background);\n  margin: 0 auto;\n  border: transparent;\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: 768px) {\n    max-width: 295px;\n    font-size: 14px;\n    line-height: 1.1;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--backdrop);\n  backdrop-filter: blur(1.5px);\n  overscroll-behavior: contain;\n`;\n","import { useEffect } from \"react\";\nimport { StyledOverlay } from \"./Modal.styled\";\nimport { createPortal } from \"react-dom\";\n\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nconst Modal = ({ children, modalClose }) => {\n  useEffect(() => {\n    document.body.classList.add(\"no-scroll\");\n\n    const handleKeyDown = (e) => {\n      if (e.code === \"Escape\") {\n        document.body.classList.remove(\"no-scroll\");\n        modalClose();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.classList.remove(\"no-scroll\");\n    };\n  }, [modalClose]);\n\n  const handleClickOverlay = (e) => {\n    if (e.target === e.currentTarget) {\n      document.body.classList.remove(\"no-scroll\");\n      modalClose();\n    }\n  };\n\n  return createPortal(\n    <StyledOverlay onClick={handleClickOverlay}>{children}</StyledOverlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\n\nexport const StyledPageTitle = styled.h2`\n  color: var(--text-color-100);\n  font-family: GilroyBold, sans-serif;\n  font-size: 8.53vw;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: -0.01em;\n  line-height: 1.18;\n\n  @media only screen and (min-width: 375px) {\n    font-size: 32px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    font-size: 44px;\n    letter-spacing: -0.44px;\n    line-height: 48px;\n  }\n`;\n","import React from \"react\";\nimport { StyledPageTitle } from \"./PageTitle.styled\";\n\nfunction PageTitle({children}) {\n  return (\n    <StyledPageTitle>\n        {children}\n    </StyledPageTitle>\n  );\n}\n\nexport default PageTitle;\n","import styled from \"styled-components\";\n\nexport const PageTopBarBox = styled.div`\n  /* outline: 1px solid yellow; */\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n  /* justify-content: space-between; */\n  margin-bottom: 40px;\n\n  h2 {\n    margin: 0 0 20px;\n    padding: 0;\n  }\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    margin-bottom: 48px;\n\n    h2 {\n      margin: 0;\n    }\n  }\n`;\n\n\n","import styled from \"styled-components\";\nimport { BiPlus } from \"react-icons/bi\";\n\nexport const ButtonS = styled.button`\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  width: 194px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  border: transparent;\n  background-color: transparent;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    & .bi-btn {\n      scale: 2;\n      transform: rotateZ(90deg);\n    }\n    & .bi-wrapper {\n      border: 3px solid #205bf1;\n    }\n  }\n`;\n\nexport const BiPlusS = styled(BiPlus)`\n  width: 24px;\n  height: 24px;\n  fill: #205bf1;\n  transition: all 0.3s ease-in-out;\n`;\n\nexport const IconWrapper = styled.div`\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  border: 1px solid #205bf1;\n  transition: all 0.3s ease-in-out;\n`;\n\nexport const BtnTitle = styled.h3`\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  width: 130px;\n  color: var(--text-color-100);\n\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.4;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 1.33;\n  }\n`;\n","import { Link } from \"react-router-dom\";\nimport { BiPlusS, BtnTitle, ButtonS, IconWrapper } from \"./BtnCreateQuizStyled\";\n\nconst BtnCreateQuiz = () => {\n  const handleCreateQuiz = () =>{\n  }\n  return (\n    <>\n    <Link to=\"/createquiz\">\n      <ButtonS type=\"button\" onClick={handleCreateQuiz}>\n        <IconWrapper className=\"bi-wrapper\">\n            <BiPlusS className=\"bi-btn\"/>\n        </IconWrapper>\n        <BtnTitle>Create quiz</BtnTitle>\n      </ButtonS>\n      </Link>\n    </>\n  );\n};\n\nexport default BtnCreateQuiz;\n","import React from \"react\";\nimport { PageTopBarBox} from \"./PageTopBarStyled\";\nimport PageTitle from \"../PageTitle/PageTitle\";\nimport BtnCreateQuiz from \"../Buttons/BtnCreateQuiz/BtnCreateQuiz\";\n\nconst PageTopBar = ({titlePage}) => {  \n  return (\n    <>\n      <PageTopBarBox>\n        <PageTitle>{titlePage}</PageTitle>\n        {titlePage !== \"Create quize\" ? <BtnCreateQuiz /> : null}\n      </PageTopBarBox>\n    </>\n  );\n};\n\nexport default PageTopBar;\n"],"names":["StyledQuestionWrapper","styled","div","_templateObject","_taggedTemplateLiteral","StyledQuestionCard","_templateObject2","props","$bgcolor","StyledImageNumberBlock","_templateObject3","ImageWrapper","_templateObject4","StyledPlus","PiPlus","_templateObject5","StyledInputTheme","input","_templateObject6","StyledTimeWrapper","_templateObject7","DropdownContainer","_templateObject8","DropdownButton","button","_templateObject9","DropdownList","ul","_templateObject10","_ref","open","DropdownItem","li","_templateObject11","Down","FiChevronDown","_templateObject12","StyledQuestion","_templateObject13","StyledInputQuestion","_templateObject14","AnswerCardContainer","_templateObject15","BtnContainer","_templateObject16","StyledBtnSave","BtnConfirmAuthS","_templateObject17","$colortext","$bgColor","StyledBtnCancel","_templateObject18","StyledQuestionNumber","p","_templateObject19","StyledAnswerWrapper","$quiz","StyledLabelAnswer","label","$colorCheckbox","StyledAnswerBoolean","StyledTextareaAnswer","textarea","StyledInputRadio","letter","handleRadioChange","checked","type","questionChanges","handleQuizChange","selectAnswers","currentQuestion","idxAnswer","currentAnswer","answers","bgColorCard","background","_jsx","children","_jsxs","htmlFor","className","id","name","placeholder","value","key","includes","concat","definedValueInput","answer","onChange","correctAnswer","setQuestionChanges","quizChanges","handleSubmit","isChecked","idxActiveQuestion","_useState","useState","_useState2","_slicedToArray","isDropdownTimeOpen","setDropdownTimeOpen","dropdownRef","useRef","currentQuiz","useSelector","selectCurrentQuiz","dispatch","useDispatch","isDesktop","useMediaQuery","query","questions","questionNumber","Number","allQuestions","length","formatTime","timeSeconds","minutes","Math","floor","seconds","String","padStart","formattedTime","time","useEffect","handleDocumentTimeClick","event","current","contains","target","document","addEventListener","removeEventListener","handleClickTime","evt","currentTimeId","prevState","_objectSpread","quizName","ref","onClick","style","rotate","map","el","question","idx","AnswerCard","_id","QuestionsWrapper","QuestionItem","SelectStyledQuiz","FiChevronUp","StyledCreateQuizModal","_currentQuiz$question","setIdxToDelete","idxToMove","setIdxToMove","setIdxActiveQuestion","isQuestionHaveChange","setChecked","idToDelete","isDeleteActiveQuestion","deleteQuestionThunk","setDeleteQuestion","toggleShowCreatePageModal","handleConfirmDelete","handleConfirmMove","isShowCreatePageModal","selectIsShowCreatePageModal","isDropdownOpen","setIsDropdownOpen","_useState3","_useState4","idxToDelete","_useState5","_useState6","createBtnRef","dataQuestions","Object","keys","handleDocumentClick","handleAdd","modifiedChanges","forEach","setCurrentChange","isHaveUnsavedQuestion","some","handlerSelectedQuestion","idxSelectedQuestion","dataset","classList","_Fragment","maxHeight","overflowY","index","charAt","toUpperCase","slice","role","stopPropagation","handleDeleteOption","cursor","FiTrash2","uuidv4","size","HiArrowLongRight","Modal","modalClose","CreateQuizModal","AttributeTitles","SetAttributeDiv","SelectAudienceDiv","InputsWrapper","ChooseAudienceLabel","AttributeCategorySelect","select","SelectColorDiv","ColorLabel","changeAttribute","changeCategory","categories","arrOptions","quizType","adults","getOptions","quizCategory","categoryName","hidden","item","PageWrapper","SectionWrapper","section","CreateQuizPage","setQuizChanges","_useState7","_useState8","location","useLocation","allCategories","selectDiscoverAllCategories","isMobile","idQuizToEdit","state","getQuizThunk","data","getQuizCategoriesThunk","fields","_defineProperty","_objectSpread3","makeFieldsAnswers","idInput","nameInput","console","group","log","groupEnd","quizId","addQuestionThunk","createQuizThunk","dataQuestion","PageTopBar","titlePage","QuestionCard","SelectAttributeCard","QuestionsList","StyledOverlay","modalRoot","querySelector","body","add","handleKeyDown","e","code","remove","window","createPortal","currentTarget","StyledPageTitle","h2","PageTopBarBox","ButtonS","BiPlusS","BiPlus","IconWrapper","BtnTitle","h3","Link","to","PageTitle","BtnCreateQuiz"],"sourceRoot":""}